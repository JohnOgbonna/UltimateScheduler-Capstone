[{"C:\\Users\\Tochukwu\\Documents\\Brainstation_projects\\CapstoneProject\\client\\src\\index.js":"1","C:\\Users\\Tochukwu\\Documents\\Brainstation_projects\\CapstoneProject\\client\\src\\App.js":"2","C:\\Users\\Tochukwu\\Documents\\Brainstation_projects\\CapstoneProject\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Tochukwu\\Documents\\Brainstation_projects\\CapstoneProject\\client\\src\\components\\fitness\\fitness.js":"4","C:\\Users\\Tochukwu\\Documents\\Brainstation_projects\\CapstoneProject\\client\\src\\components\\fitness\\excerciseplanner.js":"5","C:\\Users\\Tochukwu\\Documents\\Brainstation_projects\\CapstoneProject\\client\\src\\components\\fitness\\mainFitnessPage.js":"6","C:\\Users\\Tochukwu\\Documents\\Brainstation_projects\\CapstoneProject\\client\\src\\components\\pages\\startpage.js":"7","C:\\Users\\Tochukwu\\Documents\\Brainstation_projects\\CapstoneProject\\client\\src\\components\\pages\\login.js":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":2710,"mtime":1608006193508,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":6766,"mtime":1607987937754,"results":"13","hashOfConfig":"10"},{"size":10595,"mtime":1607844359207,"results":"14","hashOfConfig":"10"},{"size":11245,"mtime":1607907540753,"results":"15","hashOfConfig":"10"},{"size":3555,"mtime":1607989368667,"results":"16","hashOfConfig":"10"},{"size":5202,"mtime":1607986599285,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1aj3mu8",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Tochukwu\\Documents\\Brainstation_projects\\CapstoneProject\\client\\src\\index.js",[],["37","38"],"C:\\Users\\Tochukwu\\Documents\\Brainstation_projects\\CapstoneProject\\client\\src\\App.js",["39"],"C:\\Users\\Tochukwu\\Documents\\Brainstation_projects\\CapstoneProject\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Tochukwu\\Documents\\Brainstation_projects\\CapstoneProject\\client\\src\\components\\fitness\\fitness.js",["40","41"],"C:\\Users\\Tochukwu\\Documents\\Brainstation_projects\\CapstoneProject\\client\\src\\components\\fitness\\excerciseplanner.js",["42"],"import { React, Component } from \"react\";\r\nimport Dropdown from \"../../components/assets/drop-down-arrow.svg\";\r\nimport axios from \"axios\";\r\nimport \"./excerciseplanner.scss\";\r\n\r\nclass ExcercisePlanner extends Component {\r\n  state = {\r\n    cardioExcercises: [],\r\n    muscleExcercises: [],\r\n    fitness: {\r\n      height: 0,\r\n      weight: 0,\r\n      goalweight: 0,\r\n      activitiesAndDays: [],\r\n    },\r\n  };\r\n\r\n  // {\r\n  //         day:0,\r\n  //         activities: [\r\n  //             {\r\n  //                 name: \"\",\r\n  //                 description: \"\",\r\n  //                 directions: \"\",\r\n  //                 variation: [\r\n  //                     {\r\n  //                         name: \"\",\r\n  //                         description: \"\",\r\n  //                         indoor: \"\",\r\n  //                         outdoor: \"\"\r\n  //                     }\r\n  //                 ]\r\n  //             }\r\n  //         ]\r\n  //     }\r\n  ArrayofDays = () => {\r\n    //generates days of the week\r\n    // var nextWeek = new Date().getTime() + weekInMilliseconds;\r\n\r\n    let days = [];\r\n    for (let i = 0; i <= 6; i++) {\r\n      let day = new Date(new Date().getTime() + i * 24 * 60 * 60 * 1000);\r\n      days.push(day);\r\n    }\r\n    return days;\r\n  };\r\n\r\n  updateFitness = (day, activity, variation) => {\r\n    let activitiesandDays = this.state.fitness.activitiesAndDays;\r\n    console.log(day.getDay());\r\n\r\n    let dayexists = activitiesandDays.find(\r\n      (date) => date.day.toLocaleDateString() === day.toLocaleDateString()\r\n    );\r\n    if (dayexists) {\r\n      let appendtoDay = dayexists;\r\n      appendtoDay.activities.push({\r\n        name: activity.name,\r\n        description: activity.description,\r\n        directions: activity.directions,\r\n        variation: {\r\n          name: variation.name,\r\n          description: variation.description,\r\n          indoor: variation.indoor,\r\n          outdoor: variation.outdoor,\r\n        },\r\n      });\r\n      activitiesandDays[activitiesandDays.indexOf(dayexists)] = appendtoDay;\r\n    } else {\r\n      activitiesandDays.push({\r\n        day: day,\r\n        activities: [\r\n          {\r\n            name: activity.name,\r\n            description: activity.description,\r\n            directions: activity.directions,\r\n            variation: {\r\n              name: variation.name,\r\n              description: variation.description,\r\n              indoor: variation.indoor,\r\n              outdoor: variation.outdoor,\r\n            },\r\n          },\r\n        ],\r\n      });\r\n\r\n      if (activitiesandDays.length > 1) {\r\n        activitiesandDays = activitiesandDays.sort(\r\n          (a, b) => a.day.getTime() < b.day.getTime()\r\n        );\r\n      }\r\n    }\r\n    this.setState({\r\n      fitness: {\r\n        height: this.state.fitness.height,\r\n        weight: this.state.fitness.weight,\r\n        goalweight: this.state.fitness.goalweight,\r\n        activitiesAndDays: activitiesandDays,\r\n      },\r\n    });\r\n    console.log(this.state.fitness.activitiesAndDays);\r\n  };\r\n  componentDidMount() {\r\n    if (this.props.match.params.gym === \"on\") {\r\n      axios\r\n        .get(`http://localhost:7500/cardio/`)\r\n        .then((res) => {\r\n          console.log(res.data);\r\n          this.setState({ cardioExcercises: res.data });\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    } else {\r\n      axios\r\n        .get(`http://localhost:7500/cardio/nogym`)\r\n        .then((res) => {\r\n          console.log(res.data);\r\n          this.setState({ cardioExcercises: res.data });\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  } \r\n  registerActivities = () =>{ \r\n      let body = {\r\n          userid: this.props.match.params.id, \r\n          fitness: this.state.fitness\r\n\r\n       }\r\n      axios.put(\"http://localhost:7500/auth/registerfitness\", body )\r\n      .then(res=>{ \r\n          console.log(res) \r\n          window.location.href= `/fitness/${this.props.match.params.username}/${this.props.match.params.id}`\r\n      }) \r\n      .catch(err=>{ \r\n          console.log(err) \r\n          alert('Error! could not set up program')\r\n      })\r\n  }\r\n\r\n  render() {\r\n    // var weekInMilliseconds = 6 * 24 * 60 * 60 * 1000;\r\n    // var nextWeek = new Date().getTime() + weekInMilliseconds;\r\n    const options = { weekday: \"long\", month: \"long\", day: \"numeric\" };\r\n    return (\r\n      <div className=\"planner\">\r\n        {console.log(this.state.fitness.activitiesAndDays)}\r\n        {this.props.match.params.weight === \"true\" ? (\r\n          <div className=\"plansection\">\r\n            <h2 className=\"plansection__header\">\r\n              {\" \"}\r\n              In addition to a healthy diet, cardio focused workouts are a great\r\n              way to lose weight. Let's begin by keeping track of wich\r\n              excercises you'd like to do throughout this week. Here are some\r\n              suggestions:\r\n            </h2>\r\n\r\n            {this.state.fitness.activitiesAndDays !== [] ? (\r\n              <div className=\"selected\">\r\n                <h2 className=\"selected__header\">Selected Activities: </h2>\r\n\r\n                {this.state.fitness.activitiesAndDays.map((day) => {\r\n                  return (\r\n                    <div className=\"listSelect\">\r\n                      <h3 className=\"listSelect__day\">\r\n                        {day.day.toLocaleDateString(undefined, options)}\r\n                      </h3>\r\n                      <h4 className=\"listSelect__activities\">Activities: </h4>\r\n                      {day.activities.map((activity) => {\r\n                        console.log(activity);\r\n                        return (\r\n                          <p className=\"listSelect__activity\">\r\n                            {activity.variation.name}\r\n                          </p>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  );\r\n                })}\r\n                <button className=\"listSelect__button\" onClick ={this.registerActivities}>Next Step</button>\r\n              </div>\r\n            ) : null}\r\n\r\n            {this.ArrayofDays().map((day, index) => {\r\n              return (\r\n                <div\r\n                  className={`plansection__daybox${this.state[`day${index}`]}`}\r\n                >\r\n                  <div className=\"plansection__daybox-line1\">\r\n                    <h3 className=\"plansection__daybox-header\">\r\n                      {day.toLocaleDateString(undefined, options)}\r\n                    </h3>\r\n                    <img\r\n                      className={`plansection__image${\r\n                        this.state[`day${index}`]\r\n                      }`}\r\n                      src={Dropdown}\r\n                      onClick={() => {\r\n                        this.setState({\r\n                          [`day${index}`]: !this.state[`day${index}`],\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  {this.state[`day${index}`] ? (\r\n                    <div className=\"plansection__listbox\">\r\n                      <h4 className=\"plansection__listbox-header\">\r\n                        Cardio excercises:\r\n                      </h4>\r\n                      {this.state.cardioExcercises.map((excercise) => {\r\n                        return (\r\n                          //create and setstate so onclick can have a state link\r\n                          <div\r\n                            className=\"listbox\"\r\n                            onClick={() => {\r\n                              this.setState({\r\n                                [`ex${excercise.id}`]: !this.state[\r\n                                  `ex${excercise.id}`\r\n                                ],\r\n                              });\r\n                            }}\r\n                          >\r\n                            <div className=\"listbox__line1\">\r\n                              <h5 className=\"listbox__header\">\r\n                                {excercise.name.toUpperCase()}:\r\n                              </h5>\r\n\r\n                              {/* //giving select button an onclick that sets state to allow a dropdown to select excercise variation */}\r\n                              <button\r\n                                className=\"listbox__button\"\r\n                                type=\"button\"\r\n                                onClick={() =>\r\n                                  this.setState({\r\n                                    [`select${excercise.id}`]: !this.state[\r\n                                      `select${excercise.id}`\r\n                                    ],\r\n                                  })\r\n                                }\r\n                              >\r\n                                Variations\r\n                              </button>\r\n                            </div>\r\n                            {this.state[`select${excercise.id}`] ? (\r\n                              <div className=\"listbox__variations\">\r\n                                <h5 className=\"variationbox__select\">\r\n                                  Select Variation\r\n                                </h5>\r\n                                {excercise.variations.map((variation) => {\r\n                                  return (\r\n                                    <div\r\n                                      className=\"variationbox\"\r\n                                      onClick={() =>\r\n                                        this.updateFitness(\r\n                                          day,\r\n                                          excercise,\r\n                                          variation\r\n                                        )\r\n                                      }\r\n                                    >\r\n                                      <h5 className=\"variationbox__header\">\r\n                                        {variation.name}\r\n                                      </h5>\r\n                                      <p className=\"variationbox__description\">\r\n                                        {variation.description}\r\n                                      </p>\r\n                                    </div>\r\n                                  );\r\n                                })}\r\n                              </div>\r\n                            ) : null}\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  ) : null}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default ExcercisePlanner;\r\n","C:\\Users\\Tochukwu\\Documents\\Brainstation_projects\\CapstoneProject\\client\\src\\components\\fitness\\mainFitnessPage.js",["43","44","45","46","47"],"import { React, Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport WhiteDownArrow from \"../assets/white drop-down-arrow.svg\";\r\nimport DownArrow from \"../assets/drop-down-arrow.svg\";\r\nimport \"./mainfitness.scss\";\r\nimport activityIcon from \"../assets/running.svg\";\r\nimport waterGlass from \"../assets/water-glass.svg\";\r\nimport weekAct from \"../assets/challenge.svg\";\r\nimport Plus from \"../assets/plus.svg\";\r\nimport Minus from \"../assets/negative.svg\";\r\nimport axios from \"axios\";\r\n\r\nclass MainFitnessPage extends Component {\r\n  state = {\r\n    authenticated: false,\r\n    checkedforcontent: false,\r\n    cupsDrank: 0,\r\n    targetCups: 8,\r\n    fitness: null,\r\n    daysAndActivities: [\r\n      {\r\n        day: new Date(),\r\n        activities: [\r\n          {\r\n            name: \"running\",\r\n            description: \"run\",\r\n            directions: \"just run\",\r\n            variation: {\r\n              name: \"run\",\r\n              description: \"run\",\r\n              indoor: true,\r\n              outdoor: true,\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n    weight: undefined,\r\n    goalweight: undefined,\r\n    watertracker: true,\r\n  };\r\n\r\n  componentDidMount() {\r\n    let body = {\r\n      username: this.props.match.params.username,\r\n      userid: this.props.match.params.id,\r\n    };\r\n    axios.post(\"http://localhost:7500/auth/authenticate\", body).then((res) => {\r\n      this.setState({\r\n        authenticated: res.data,\r\n        user: this.props.match.params.username,\r\n      });\r\n      console.log(res.data);\r\n    });\r\n  }\r\n  componentDidUpdate() {\r\n    if (this.state.authenticated && !this.state.checkedforcontent) {\r\n      let body = {\r\n        username: this.props.match.params.username,\r\n        userid: this.props.match.params.id,\r\n      };\r\n\r\n      axios\r\n        .post(\"http://localhost:7500/auth/services\", body)\r\n        .then((res) => {\r\n          this.setState({ fitness: res.data });\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n      this.setState({ checkedforcontent: true });\r\n    }\r\n  }\r\n  todaysActivities = () => {\r\n    let today = new Date();\r\n    let displayday = this.state.fitness.activitiesAndDays.find(\r\n      (date) => (new Date (date.day).toLocaleDateString() === today.toLocaleDateString())\r\n    ); \r\n    console.log(displayday)\r\n    if (displayday) {\r\n      return displayday;\r\n    } else {\r\n      displayday = {\r\n        day: new Date(),\r\n        activities: [\r\n          {\r\n            name: \"running\",\r\n            description: \"run\",\r\n            directions: \"just run\",\r\n            variation: {\r\n              name: \"run\",\r\n              description: \"run\",\r\n              indoor: true,\r\n              outdoor: true,\r\n            },\r\n          },\r\n        ],\r\n      };\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let todaysActivities;\r\n    if (this.state.fitness) {\r\n      todaysActivities = this.todaysActivities(); \r\n      console.log(todaysActivities)\r\n    }\r\n    console.log(this.state.fitness);\r\n    const options = { weekday: \"long\", month: \"long\", day: \"numeric\" };\r\n    if (this.state.authenticated) {\r\n      return (\r\n        <div className=\"mainfitness\">\r\n             <div className=\"mainfitness__line1\">\r\n          <div className=\"activities\">\r\n            <div className=\"activities__line1\">\r\n              <h3 className=\"activities__header\">Todays Activities</h3>\r\n              <img\r\n                className=\"activities__image\"\r\n                src={activityIcon}\r\n                alt=\"icon\"\r\n              />\r\n            </div>\r\n            <div className=\"excercises\">\r\n              {todaysActivities\r\n                ? todaysActivities.activities.map((activity) => {\r\n                    return (\r\n                      <div className=\"excercises__box\">\r\n                        <div className=\"excercises__box-line1\">\r\n                          <h4 className=\"excercises__box-header\">\r\n                            {activity.name.toUpperCase()} :{\" \"}\r\n                            {activity.variation.name}{\" \"}\r\n                          </h4>\r\n\r\n                          <img\r\n                            className={`excercises__box-image${\r\n                              this.state[`view${activity.name}`]\r\n                            }`}\r\n                            src={DownArrow}\r\n                            onClick={() =>\r\n                              this.setState({\r\n                                [`view${activity.name}`]: !this.state[\r\n                                  `view${activity.name}`\r\n                                ],\r\n                              })\r\n                            }\r\n                          ></img>\r\n                        </div>\r\n                        {this.state[`view${activity.name}`] ? (\r\n                          <div className=\"excercises__box-info\">\r\n                            <p className=\"excercise__box-item\">\r\n                              <span className=\"bold\">Description: </span>\r\n                              {activity.variation.description}\r\n                            </p>\r\n                            {activity.variation.outdoor &&\r\n                            activity.variation.indoor ? (\r\n                              <p className=\"excercise__box-item\">\r\n                                <span classNamr =\"bold\">Indoor/Outdoor: Both</span>\r\n                              </p>\r\n                            ) : null}\r\n                            {activity.variation.outdoor &&\r\n                            !activity.variation.indoor ? (\r\n                              <p className=\"excercise__box-item\">\r\n                                Indoor/Outdoor: Outdoor\r\n                              </p>\r\n                            ) : null}\r\n                            {!activity.variation.outdoor &&\r\n                            activity.variation.indoor ? (\r\n                              <p className=\"excercise__box-item\">\r\n                                Indoor/Outdoor: Indoor\r\n                              </p>\r\n                            ) : null}\r\n                            <p className=\"excercise__box-item\">\r\n                              Directions:{activity.directions}{\" \"}\r\n                            </p>\r\n                          </div>\r\n                        ) : null}\r\n                      </div>\r\n                    );\r\n                  })\r\n                : null}\r\n            </div>\r\n          </div>\r\n          {this.state.watertracker ? (\r\n            <div className=\"water\">\r\n              <div className=\"water__line1\">\r\n                <h3 className=\"water__header\">\r\n                  You drank {this.state.cupsDrank} cups of water today!\r\n                </h3>\r\n                <img\r\n                  className=\"water__image\"\r\n                  src={waterGlass}\r\n                  alt=\"waterglass\"\r\n                ></img>\r\n              </div>\r\n              <p className=\"water__description\">\r\n                It's recomended that the average adult drink 8 cups of water\r\n                each day. Your goal for today is {this.state.targetCups} cups!\r\n                (1 cup is aprox. 250 ml)\r\n              </p>\r\n              {this.state.cupsDrank >= this.state.targetCups ? (\r\n                <p className=\"water__description\">\r\n                  Nice! you hit your water intake goal for today!\r\n                </p>\r\n              ) : null}\r\n              <div className=\"water__icons\">\r\n                <img\r\n                  className=\"water__icons-icon\"\r\n                  src={Minus}\r\n                  alt=\"-\"\r\n                  onClick={() =>\r\n                    this.setState({ cupsDrank: this.state.cupsDrank - 1 })\r\n                  }\r\n                />\r\n                <img\r\n                  className=\"water__icons-icon\"\r\n                  src={Plus}\r\n                  alt=\"+\"\r\n                  onClick={() =>\r\n                    this.setState({ cupsDrank: this.state.cupsDrank + 1 })\r\n                  }\r\n                />\r\n              </div>\r\n            </div> \r\n            \r\n          ) : null}\r\n          </div>\r\n          <div className=\"week\">\r\n            <div className=\"week__line1\">\r\n              <img className=\"week__image\" src={weekAct}></img>\r\n              <h3 className=\"week__Header\">Activities for this week</h3>\r\n              <img\r\n                className={`week__image${this.state[\"activities\"]}`}\r\n                src={WhiteDownArrow}\r\n                onClick={() =>\r\n                  this.setState({ [\"activities\"]: !this.state[\"activities\"] })\r\n                }\r\n              />\r\n            </div>\r\n            {this.state[\"activities\"] ? (\r\n              <div className=\"weekActivities\">\r\n                {this.state.fitness.activitiesAndDays.map((day) => {\r\n                  return (\r\n                    <div className =\"weekActivities__box\">\r\n                      <div className=\"weekActivities__line1\">\r\n                        <h4 className=\"weekActivities__day\">\r\n                          {new Date(day.day).toLocaleDateString(undefined, options)}\r\n                        </h4>\r\n                        <img\r\n                          className={`weekActivities__image${\r\n                            this.state[`${day.day}active`]\r\n                          }`}\r\n                          src={DownArrow}\r\n                          onClick={() =>\r\n                            this.setState({\r\n                              [`${day.day}active`]: !this.state[\r\n                                `${day.day}active`\r\n                              ],\r\n                            })\r\n                          }\r\n                        />\r\n                      </div>\r\n\r\n                      {day.activities && day.activities !== [] ? (\r\n                        <div>\r\n                          {this.state[`${day.day}active`] ? (\r\n                            <div className=\"weekActivities__list\">\r\n                              {day.activities.map((act) => {\r\n                                return (\r\n                                  <div className=\"activitybox\">\r\n                                    <p className=\"activitybox__name\">\r\n                                    {act.variation.name.toUpperCase()} \r\n                                    \r\n                                    </p>\r\n                                    {console.log(act)}\r\n                                  </div>\r\n                                );\r\n                              })}\r\n                            </div>\r\n                          ) : null}\r\n                        </div>\r\n                      ) : (\r\n                        <p className=\"weekActivities__none\">\r\n                          No activities this day\r\n                        </p>\r\n                      )}\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <h1 className=\"noauth__header\">Not Logged in</h1>\r\n          <Link to=\"/\">\r\n            <button type=\"noauth__button\" className>\r\n              Login\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default MainFitnessPage;\r\n","C:\\Users\\Tochukwu\\Documents\\Brainstation_projects\\CapstoneProject\\client\\src\\components\\pages\\startpage.js",["48"],"C:\\Users\\Tochukwu\\Documents\\Brainstation_projects\\CapstoneProject\\client\\src\\components\\pages\\login.js",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":6,"column":9,"nodeType":"55","messageId":"56","endLine":6,"endColumn":13},{"ruleId":"53","severity":1,"message":"57","line":2,"column":16,"nodeType":"55","messageId":"56","endLine":2,"endColumn":29},{"ruleId":"53","severity":1,"message":"58","line":67,"column":9,"nodeType":"55","messageId":"56","endLine":67,"endColumn":13},{"ruleId":"59","severity":1,"message":"60","line":195,"column":21,"nodeType":"61","endLine":205,"endColumn":23},{"ruleId":"59","severity":1,"message":"60","line":134,"column":27,"nodeType":"61","endLine":146,"endColumn":28},{"ruleId":"59","severity":1,"message":"60","line":229,"column":15,"nodeType":"61","endLine":229,"endColumn":58},{"ruleId":"59","severity":1,"message":"60","line":231,"column":15,"nodeType":"61","endLine":237,"endColumn":17},{"ruleId":"62","severity":1,"message":"63","line":235,"column":35,"nodeType":"64","messageId":"65","endLine":235,"endColumn":76,"fix":"66"},{"ruleId":"59","severity":1,"message":"60","line":248,"column":25,"nodeType":"61","endLine":260,"endColumn":27},{"ruleId":"53","severity":1,"message":"67","line":2,"column":8,"nodeType":"55","messageId":"56","endLine":2,"endColumn":16},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useRouteMatch' is defined but never used.","'both' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-useless-computed-key","Unnecessarily computed property [\"activities\"] found.","Property","unnecessarilyComputedProperty",{"range":"70","text":"71"},"'Dropdown' is defined but never used.","no-global-assign","no-unsafe-negation",[8486,8500],"\"activities\""]